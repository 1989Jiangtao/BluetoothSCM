C51 COMPILER V9.52.0.0   OLED                                                              09/18/2018 10:41:22 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN ..\obj\OLED.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE ..\src\OLED.c ROM(COMPACT) RTX51 BROWSE INCDIR(..\src) DEBUG OBJECTEXTEND P
                    -RINT(.\OLED.lst) TABS(2) OBJECT(..\obj\OLED.obj)

line level    source

   1          /********************************************
   2          OLED屏测试程序-STC&89C52 
   3          
   4          
   5          使用说明：
   6          OLED电源使用3.3V。   
   7          ----------------
   8          G    电源地
   9          3.3V 接3.3V电源
  10          SCL   P1.0  
  11          SDA  P1.1
  12          RST  P1.2 
  13          DC   P1.3
  14          ============================================
  15          OLED电源使用5V。   
  16          ----------------
  17          G    电源地
  18          3.3V 接5V电源，电源跟模块之间串接100欧姆电阻，并加3.3V钳位二极管
  19          SCL   P1.0 单片机跟模块之间串接1k-3.3k电阻 
  20          SDA  P1.1 单片机跟模块之间串接1k-3.3k电阻 
  21          RST  P1.2 单片机跟模块之间串接1k-3.3k电阻 
  22          DC   P1.3 单片机跟模块之间串接1k-3.3k电阻     
  23          ============================================     
  24          如果用户使用的是5V单片机，请看用户手册，切勿烧毁模块！ 
  25          *********************************************************/
  26          #include "STC89C5xRC_RDP.h"
  27          #include "intrins.h"
  28          #include "OLED.h"
  29           
  30          sbit LCD_CS =P1^1; 
  31          sbit LCD_SCL=P1^3;  
  32          sbit LCD_SDA=P1^2;
  33          sbit LCD_RST=P1^4; 
  34          sbit LCD_DC =P1^0; 
  35          
  36          #define XLevelL   0x00
  37          #define XLevelH   0x10
  38          #define XLevel    ((XLevelH&0x0F)*16+XLevelL)
  39          #define Max_Column  128
  40          #define Max_Row   64
  41          #define Brightness  0xCF 
  42          
  43          /*
  44          4线SPI使用说明：
  45          VBT 供内部DC-DC电压，3.3~4.3V，如果使用5V电压，为保险起见串一个100~500欧的电阻
  46          VCC 供内部逻辑电压 1.8~6V   
  47          GND 地
  48          
  49          BS0 低电平
  50          BS1 低电平
  51          BS2 低电平
  52          
  53          CS  片选管脚
  54          DC  命令数据选择管脚
C51 COMPILER V9.52.0.0   OLED                                                              09/18/2018 10:41:22 PAGE 2   

  55          RES 模块复位管脚 
  56          D0（SCLK） ，时钟脚，由MCU控制
  57          D1（MOSI） ，主输出从输入数据脚，由MCU控制
  58          
  59          D2 悬空      
  60          D3-D7 ， 低电平 ， 也可悬空，但最好设为低电平
  61          RD  低电平 ，也可悬空，但最好设为低电平
  62          RW  低电平 ，也可悬空，但最好设为低电平
  63          RD  低电平 ，也可悬空，但最好设为低电平   
  64          */
  65          
  66          #define X_WIDTH 128
  67          #define Y_WIDTH 64
  68          //======================================
  69          
  70          // const unsigned char code F6x8[][6] =
  71          // {
  72          //     { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp
  73          //     { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !
  74          //     { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "
  75          //     { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #
  76          //     { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $
  77          //     { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %
  78          //     { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &
  79          //     { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '
  80          //     { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (
  81          //     { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )
  82          //     { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *
  83          //     { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +
  84          //     { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,
  85          //     { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -
  86          //     { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .
  87          //     { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /
  88          //     { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0
  89          //     { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1
  90          //     { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2
  91          //     { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3
  92          //     { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4
  93          //     { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5
  94          //     { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6
  95          //     { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7
  96          //     { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8
  97          //     { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9
  98          //     { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :
  99          //     { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;
 100          //     { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <
 101          //     { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =
 102          //     { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >
 103          //     { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?
 104          //     { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @
 105          //     { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A
 106          //     { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B
 107          //     { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C
 108          //     { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D
 109          //     { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E
 110          //     { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F
 111          //     { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G
 112          //     { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H
 113          //     { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I
 114          //     { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J
 115          //     { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K
 116          //     { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L
C51 COMPILER V9.52.0.0   OLED                                                              09/18/2018 10:41:22 PAGE 3   

 117          //     { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M
 118          //     { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N
 119          //     { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O
 120          //     { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P
 121          //     { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q
 122          //     { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R
 123          //     { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S
 124          //     { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T
 125          //     { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U
 126          //     { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V
 127          //     { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W
 128          //     { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X
 129          //     { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y
 130          //     { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z
 131          //     { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [
 132          //     { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 },   // 55
 133          //     { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]
 134          //     { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^
 135          //     { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _
 136          //     { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '
 137          //     { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a
 138          //     { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b
 139          //     { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c
 140          //     { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d
 141          //     { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e
 142          //     { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f
 143          //     { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g
 144          //     { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h
 145          //     { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i
 146          //     { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j
 147          //     { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k
 148          //     { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l
 149          //     { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m
 150          //     { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n
 151          //     { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o
 152          //     { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p
 153          //     { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q
 154          //     { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r
 155          //     { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s
 156          //     { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t
 157          //     { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u
 158          //     { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v
 159          //     { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w
 160          //     { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x
 161          //     { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y
 162          //     { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z
 163          //     { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines
 164          // };
 165          
 166          // const unsigned char F14x16[] = {  
 167          //  0x10,0x10,0x10,0x10,0x10,0xFF,0x10,0xF0,0x12,0x1C,0xD0,0x10,0x10,0x10,
 168          //  0x40,0x20,0x10,0x0C,0x03,0x10,0x08,0x3F,0x42,0x41,0x40,0x40,0x40,0x70,//龙
 169          //  0x00,0x00,0xFE,0x84,0x84,0x84,0x84,0x82,0x82,0x82,0x82,0xC0,0x80,0x00,
 170          //  0x20,0x20,0x3F,0x20,0x20,0x20,0x20,0x20,0x3F,0x20,0x20,0x20,0x30,0x20,//丘
 171          //  0x14,0x13,0x92,0x7E,0x32,0x52,0x92,0x00,0x7C,0x44,0x44,0x44,0x7C,0x00,
 172          //  0x01,0x01,0x00,0xFF,0x49,0x49,0x49,0x49,0x49,0x49,0xFF,0x00,0x00,0x00,//智
 173          //  0xB8,0x97,0x92,0x90,0x94,0xB8,0x10,0x00,0x7F,0x48,0x48,0x44,0x74,0x20,
 174          //  0xFF,0x0A,0x0A,0x4A,0x8A,0x7F,0x00,0x00,0x3F,0x44,0x44,0x42,0x72,0x20,//能 
 175          // };
 176          
 177          /*
 178          const unsigned char code F14x16_Idx[] = 
C51 COMPILER V9.52.0.0   OLED                                                              09/18/2018 10:41:22 PAGE 4   

 179          {
 180            "北京龙丘邱科技智能车首选液晶"
 181          };
 182          const unsigned char F14x16[] = {    
 183          0x20,0x20,0x20,0x20,0xFF,0x00,0x00,0x00,0xFF,0x40,0x20,0x30,0x18,0x10,
 184          0x30,0x18,0x08,0x04,0x7F,0x00,0x00,0x00,0x3F,0x40,0x40,0x40,0x40,0x78,//北0
 185          0x04,0x04,0xE4,0x24,0x24,0x25,0x26,0x24,0x24,0x24,0xE4,0x06,0x04,0x00,
 186          0x20,0x10,0x19,0x0D,0x41,0x81,0x7F,0x01,0x01,0x05,0x0D,0x38,0x10,0x00,//京1
 187          0x10,0x10,0x10,0x10,0x10,0xFF,0x10,0xF0,0x12,0x1C,0xD0,0x10,0x10,0x10,
 188          0x40,0x20,0x10,0x0C,0x03,0x10,0x08,0x3F,0x42,0x41,0x40,0x40,0x40,0x70,//龙2
 189          0x00,0x00,0xFE,0x84,0x84,0x84,0x84,0x82,0x82,0x82,0x82,0xC0,0x80,0x00,
 190          0x20,0x20,0x3F,0x20,0x20,0x20,0x20,0x20,0x3F,0x20,0x20,0x20,0x30,0x20,//丘3
 191          0x00,0xFC,0x24,0x24,0xE2,0x22,0x22,0x00,0xFE,0x02,0x22,0x52,0x8E,0x02,
 192          0x10,0x1F,0x10,0x08,0x0F,0x08,0x08,0x00,0xFF,0x00,0x08,0x08,0x10,0x0F,//邱4
 193          0x12,0x92,0x72,0xFE,0x51,0x91,0x00,0x22,0xCC,0x00,0x00,0xFF,0x00,0x00,
 194          0x02,0x01,0x00,0xFF,0x00,0x04,0x04,0x04,0x02,0x02,0x02,0xFF,0x01,0x01,//科5
 195          0x08,0x88,0xFF,0x48,0x28,0x00,0xC8,0x48,0x48,0x7F,0x48,0xC8,0x48,0x08,
 196          0x41,0x80,0x7F,0x00,0x40,0x40,0x20,0x13,0x0C,0x0C,0x12,0x21,0x60,0x20,//技6  
 197          0x14,0x13,0x92,0x7E,0x32,0x52,0x92,0x00,0x7C,0x44,0x44,0x44,0x7C,0x00,
 198          0x01,0x01,0x00,0xFF,0x49,0x49,0x49,0x49,0x49,0x49,0xFF,0x00,0x00,0x00,//智10
 199          0xB8,0x97,0x92,0x90,0x94,0xB8,0x10,0x00,0x7F,0x48,0x48,0x44,0x74,0x20,
 200          0xFF,0x0A,0x0A,0x4A,0x8A,0x7F,0x00,0x00,0x3F,0x44,0x44,0x42,0x72,0x20,//能11
 201          0x04,0x84,0xC4,0xA4,0x9C,0x87,0x84,0xF4,0x84,0x84,0x84,0x84,0x84,0x00,
 202          0x04,0x04,0x04,0x04,0x04,0x04,0x04,0xFF,0x04,0x04,0x04,0x04,0x04,0x04,//车12
 203          0x04,0x04,0xE4,0x25,0x26,0x34,0x2C,0x24,0x24,0x26,0xE5,0x04,0x04,0x04,
 204          0x00,0x00,0x7F,0x25,0x25,0x25,0x25,0x25,0x25,0x25,0x7F,0x00,0x00,0x00,//首13
 205          0x40,0x42,0xCC,0x00,0x50,0x4E,0xC8,0x48,0x7F,0xC8,0x48,0x48,0x40,0x00,
 206          0x40,0x20,0x1F,0x20,0x48,0x46,0x41,0x40,0x40,0x47,0x48,0x48,0x4E,0x40,//选14
 207          0x61,0x06,0xE0,0x18,0x84,0xE4,0x1C,0x84,0x65,0xBE,0x24,0xA4,0x64,0x04,
 208          0x04,0xFF,0x00,0x01,0x00,0xFF,0x41,0x21,0x12,0x0C,0x1B,0x61,0xC0,0x40,//液15
 209          0x00,0x00,0x00,0x7E,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x7E,0x00,0x00,0x00,
 210          0x7F,0x25,0x25,0x25,0x25,0x7F,0x00,0x00,0x7F,0x25,0x25,0x25,0x25,0x7F,//晶16   
 211          };
 212          */
 213          
 214          //======================================================
 215          // 128X64I液晶底层驱动[8X16]字体库
 216          // 设计者: powerint
 217          // 描  述: [8X16]西文字符的字模数据 (纵向取模,字节倒序)
 218          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 219          //======================================================
 220          
 221          const unsigned char code F8X16[]=
 222          {
 223            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 0
 224            0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//!1
 225            0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//"2
 226            0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//#3
 227            0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$4
 228            0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//%5
 229            0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&6
 230            0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//'7
 231            0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//(8
 232            0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//)9
 233            0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//*10
 234            0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+11
 235            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//,12
 236            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//-13
 237            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//.14
 238            0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,///15
 239            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//016
 240            0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//117
C51 COMPILER V9.52.0.0   OLED                                                              09/18/2018 10:41:22 PAGE 5   

 241            0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//218
 242            0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//319
 243            0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//420
 244            0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//521
 245            0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//622
 246            0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//723
 247            0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//824
 248            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//925
 249            0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//:26
 250            0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//;27
 251            0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//<28
 252            0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//=29
 253            0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//>30
 254            0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//?31
 255            0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@32
 256            0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A33
 257            0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B34
 258            0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C35
 259            0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D36
 260            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E37
 261            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F38
 262            0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G39
 263            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H40
 264            0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I41
 265            0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J42
 266            0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K43
 267            0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L44
 268            0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M45
 269            0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N46
 270            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O47
 271            0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P48
 272            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q49
 273            0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R50
 274            0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S51
 275            0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T52
 276            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U53
 277            0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V54
 278            0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W55
 279            0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X56
 280            0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y57
 281            0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z58
 282            0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[59
 283            0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\60
 284            0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//]61
 285            0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^62
 286            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_63
 287            0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//`64
 288            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a65
 289            0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b66
 290            0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c67
 291            0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d68
 292            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e69
 293            0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f70
 294            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g71
 295            0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h72
 296            0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i73
 297            0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j74
 298            0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k75
 299            0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l76
 300            0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m77
 301            0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n78
 302            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o79
C51 COMPILER V9.52.0.0   OLED                                                              09/18/2018 10:41:22 PAGE 6   

 303            0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p80
 304            0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q81
 305            0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r82
 306            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s83
 307            0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t84
 308            0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//u85
 309            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v86
 310            0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w87
 311            0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x88
 312            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y89
 313            0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z90
 314            0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{91
 315            0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//|92
 316            0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//}93
 317            0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~94
 318          
 319          };
 320          
 321          
 322          void LCD_WrDat(unsigned char dat)
 323          {
 324   1        unsigned char i=8;
 325   1        LCD_CS=0;;
 326   1        LCD_DC=1;;
 327   1        LCD_SCL=0;;
 328   1        //;;    
 329   1        while(i--)
 330   1        {
 331   2          if(dat&0x80){LCD_SDA=1;}
 332   2          else{LCD_SDA=0;}
 333   2          LCD_SCL=1; 
 334   2          ;;;
 335   2          //;;            
 336   2          LCD_SCL=0;;    
 337   2          dat<<=1;    
 338   2        }
 339   1        LCD_CS=1;
 340   1      }
 341          void LCD_WrCmd(unsigned char cmd)
 342          {
 343   1        unsigned char i=8;
 344   1        
 345   1        LCD_CS=0;;
 346   1        LCD_DC=0;;
 347   1        LCD_SCL=0;;
 348   1        //;;   
 349   1        while(i--)
 350   1        {
 351   2          if(cmd&0x80){LCD_SDA=1;}
 352   2          else{LCD_SDA=0;;}
 353   2          LCD_SCL=1;;
 354   2          ;;;
 355   2          //;;             
 356   2          LCD_SCL=0;;    
 357   2          cmd<<=1;;   
 358   2        }   
 359   1        LCD_CS=1;
 360   1      }
 361          void LCD_Set_Pos(unsigned char x, unsigned char y)
 362          { 
 363   1        LCD_WrCmd(0xb0+y);
 364   1        LCD_WrCmd(((x&0xf0)>>4)|0x10);
C51 COMPILER V9.52.0.0   OLED                                                              09/18/2018 10:41:22 PAGE 7   

 365   1        LCD_WrCmd((x&0x0f)|0x00); 
 366   1      } 
 367          void LCD_Fill(unsigned char bmp_dat)
 368          {
 369   1        unsigned char y,x;
 370   1        
 371   1        for(y=0;y<8;y++)
 372   1        {
 373   2          LCD_WrCmd(0xb0+y);
 374   2          LCD_WrCmd(0x01);
 375   2          LCD_WrCmd(0x10);
 376   2          for(x=0;x<X_WIDTH;x++)
 377   2            LCD_WrDat(bmp_dat);
 378   2        }
 379   1      }
 380          void LCD_CLS(void)
 381          {
 382   1        unsigned char y,x;  
 383   1        for(y=0;y<8;y++)
 384   1        {
 385   2          LCD_WrCmd(0xb0+y);
 386   2          LCD_WrCmd(0x01);
 387   2          LCD_WrCmd(0x10); 
 388   2          for(x=0;x<X_WIDTH;x++)
 389   2            LCD_WrDat(0);
 390   2        }
 391   1      }
 392          void LCD_DLY_ms(unsigned int ms)
 393          {                         
 394   1        unsigned int a;
 395   1        while(ms)
 396   1        {
 397   2          a=1335;
 398   2          while(a--);
 399   2          ms--;
 400   2        }
 401   1        return;
 402   1      } 
 403          void LCD_Init(void)        
 404          {  
 405   1        LCD_SCL=1;
 406   1        LCD_CS=1; //预制SLK和SS为高电平    
 407   1        LCD_RST=0;
 408   1        LCD_DLY_ms(50);
 409   1        LCD_RST=1;
 410   1        
 411   1        //从上电到下面开始初始化要有足够的时间，即等待RC复位完毕   
 412   1        
 413   1        LCD_WrCmd(0xae);//--turn off oled panel
 414   1        LCD_WrCmd(0x00);//---set low column address
 415   1        LCD_WrCmd(0x10);//---set high column address
 416   1        LCD_WrCmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 417   1        LCD_WrCmd(0x81);//--set contrast control register
 418   1        LCD_WrCmd(0xcf); // Set SEG Output Current Brightness
 419   1        LCD_WrCmd(0xa1);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 420   1        LCD_WrCmd(0xc8);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 421   1        LCD_WrCmd(0xa6);//--set normal display
 422   1        LCD_WrCmd(0xa8);//--set multiplex ratio(1 to 64)
 423   1        LCD_WrCmd(0x3f);//--1/64 duty
 424   1        LCD_WrCmd(0xd3);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 425   1        LCD_WrCmd(0x00);//-not offset
 426   1        LCD_WrCmd(0xd5);//--set display clock divide ratio/oscillator frequency
C51 COMPILER V9.52.0.0   OLED                                                              09/18/2018 10:41:22 PAGE 8   

 427   1        LCD_WrCmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
 428   1        LCD_WrCmd(0xd9);//--set pre-charge period
 429   1        LCD_WrCmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 430   1        LCD_WrCmd(0xda);//--set com pins hardware configuration
 431   1        LCD_WrCmd(0x12);
 432   1        LCD_WrCmd(0xdb);//--set vcomh
 433   1        LCD_WrCmd(0x40);//Set VCOM Deselect Level
 434   1        LCD_WrCmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
 435   1        LCD_WrCmd(0x02);//
 436   1        LCD_WrCmd(0x8d);//--set Charge Pump enable/disable
 437   1        LCD_WrCmd(0x14);//--set(0x10) disable
 438   1        LCD_WrCmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
 439   1        LCD_WrCmd(0xa6);// Disable Inverse Display On (0xa6/a7) 
 440   1        LCD_WrCmd(0xaf);//--turn on oled panel
 441   1        LCD_Fill(0x00);  //初始清屏
 442   1        LCD_Set_Pos(0,0);   
 443   1      } 
 444          
 445          //==============================================================
 446          //函数名：LCD_P6x8Str(unsigned char x,unsigned char y,unsigned char *p)
 447          //功能描述：写入一组标准ASCII字符串
 448          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
 449          //返回：无
 450          //==============================================================  
 451          // void LCD_P6x8Str(unsigned char x,unsigned char y,unsigned char ch[])
 452          // {
 453          //   unsigned char c=0,i=0,j=0;      
 454          //   while (ch[j]!='\0')
 455          //   {    
 456          //     c =ch[j]-32;
 457          //     if(x>126){x=0;y++;}
 458          //     LCD_Set_Pos(x,y);    
 459          //    for(i=0;i<6;i++)     
 460          //      LCD_WrDat(F6x8[c][i]);  
 461          //    x+=6;
 462          //    j++;
 463          //   }
 464          // }
 465          //==============================================================
 466          //函数名：LCD_P8x16Str(unsigned char x,unsigned char y,unsigned char *p)
 467          //功能描述：写入一组标准ASCII字符串
 468          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
 469          //返回：无
 470          //============================================================== 
 471           
 472          void LCD_P8x16Str(unsigned char x,unsigned char y,unsigned char ch[])
 473          {
 474   1        unsigned char c=0,i=0,j=0;
 475   1              
 476   1        while (ch[j]!='\0')
 477   1        {    
 478   2          c =ch[j]-32;
 479   2          if(x>120){x=0;y++;}
 480   2          LCD_Set_Pos(x,y);    
 481   2          for(i=0;i<8;i++)     
 482   2            LCD_WrDat(F8X16[c*16+i]);
 483   2          LCD_Set_Pos(x,y+1);    
 484   2          for(i=0;i<8;i++)     
 485   2            LCD_WrDat(F8X16[c*16+i+8]);  
 486   2          x+=8;
 487   2          j++;
 488   2        }
C51 COMPILER V9.52.0.0   OLED                                                              09/18/2018 10:41:22 PAGE 9   

 489   1      }
 490          
 491          //输出汉字字符串
 492          //void LCD_P14x16Ch(unsigned char x,unsigned char y,unsigned char N)
 493          //{
 494          //  unsigned char wm=0,ii = 0;
 495          //  unsigned int adder=28*N;      
 496          //  LCD_Set_Pos(x , y);
 497          //  for(wm = 0;wm < 14;wm++)               
 498          //  {
 499          //    LCD_WrDat(F14x16[adder]); 
 500          //    adder += 1;
 501          //  }      
 502          //  LCD_Set_Pos(x,y + 1); 
 503          //  for(wm = 0;wm < 14;wm++)          
 504          //  {
 505          //    LCD_WrDat(F14x16[adder]);
 506          //    adder += 1;
 507          //  }       
 508          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    500    ----
   CONSTANT SIZE    =   1520    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
